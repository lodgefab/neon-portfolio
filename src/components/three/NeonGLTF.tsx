/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
*/

import * as THREE from "three";
import React, {useRef} from "react";
import { useGLTF } from "@react-three/drei";
import { GLTF } from "three-stdlib";
import { GUIController } from '../../utils/gui';
import { useFrame } from "@react-three/fiber";
import {glassState} from '../../utils/store'


type GLTFResult = GLTF & {
  nodes: {
    light_fd: THREE.Mesh;
    root: THREE.Mesh;
    light_ar: THREE.Mesh;
    glass: THREE.Mesh;
  };
  materials: {};
};

export function NeonGLTF(props: JSX.IntrinsicElements["group"]) {
    const { nodes, materials } = useGLTF("/sign.gltf") as GLTFResult;
    const glassRef = useRef<THREE.Mesh>(null)

    // add controller
    const gui = GUIController.instance.setFolder('Glass')
    gui.addNumericSlider(glassState, 'thickness', 0, 20, 1)
	gui.addNumericSlider(glassState, 'roughness', 0, 1, 0.1)
    gui.addNumericSlider(glassState, 'clearcoat', 0, 1, 0.1)
    gui.addNumericSlider(glassState, 'clearcoatRoughness', 0, 1, 0.1)
    gui.addNumericSlider(glassState, 'transmission', 0.9, 1, 0.01)
    gui.addNumericSlider(glassState, 'ior', 1, 2.3, 0.05)
    gui.addNumericSlider(glassState, 'envMapIntensity', 0, 100, 1)
    gui.addColor(glassState, 'color')
    gui.addColor(glassState, 'attenuationTint')
    gui.addNumericSlider(glassState, 'attenuationDistance', 0, 1, 0.1)
    

  useFrame(()=>{
    const glassMaterial = glassRef.current!.material as THREE.MeshPhysicalMaterial
	glassMaterial.color.set(glassState.color)
	glassMaterial.thickness = glassState.thickness
	glassMaterial.roughness = glassState.roughness
  })
  return (
    <group {...props} dispose={null} scale={0.01}>
      <group
        name="logo"
        position={[0, 0, 0]}
        rotation={[1.58, -0.01, -0.02]}
      >
        <mesh
          name="light_fd"
          geometry={nodes.light_fd.geometry}
          material={nodes.light_fd.material}
          position={[-285.43, 0, 298.68]}
          rotation={[-Math.PI / 2, 0, 0]}
          scale={265.42}
          material-color='#ffe79e'
        />
        <mesh
          name="root"
          geometry={nodes.root.geometry}
          material={nodes.root.material}
          position={[-83.97, -56.81, 184.25]}
          rotation={[-Math.PI / 2, Math.PI / 2, 0]}
          scale={[0.65, 0.65, 1.7]}
        />
        <mesh
          name="light_ar"
          geometry={nodes.light_ar.geometry}
          material={nodes.light_ar.material}
          position={[-285.43, 0, 298.68]}
          rotation={[-Math.PI / 2, 0, 0]}
          scale={265.42}
        />
        <mesh
          name="glass"
          ref={glassRef}
          geometry={nodes.glass.geometry}
        //   material={nodes.glass.material}
          position={[-285.43, 0, 298.68]}
          rotation={[-Math.PI / 2, 0, 0]}
          scale={265.42}
        >
            <meshPhysicalMaterial />
        </mesh>
      </group>
      
      
    </group>
  );
}

useGLTF.preload("/sign.gltf");
